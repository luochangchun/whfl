import org.marker.mushroom.alias.DAOimport org.marker.mushroom.beans.GuestBookimport org.marker.mushroom.core.AppStaticimport org.marker.mushroom.core.config.impl.DataBaseConfigimport org.marker.mushroom.dao.ISupportDaoimport org.marker.mushroom.ext.plugin.Pluginletimport org.marker.mushroom.holder.SpringContextHolderimport javax.servlet.http.HttpServletRequestimport javax.servlet.http.HttpServletResponse/** * 留言插件 *  */public class PluginletImpl extends Pluginlet {	/** 数据库配置 */	protected DataBaseConfig config = DataBaseConfig.getInstance();	public PluginletImpl(){		this._config = [                module: "1316608071154b0fa1da3d34ee97037a",     			name  : "留言插件",    			author: "marker",     			type : "guestbook",// 模型标识     			description : "常规插件"  		   ]; 				// 路由配置		this.routers = [ 		      " get:/list": "list",			  " get:/delete" : "delete",			  " get:/reply" : "reply",			  " get:/auditList" : "auditList",			  " get:/audit" : "audit",		      "post:/add" : "submit",		      "post:/update" : "update",		      "post:/auditUpdate" : "auditUpdate"		];	}				/**	 * 显示留言列表	 */	public Object list(){		HttpServletRequest request = getServletRequest();		int currentPageNo = 1;		try{			currentPageNo = Integer.parseInt(request.getParameter("currentPageNo"));		}catch(Exception e){ }		ISupportDao dao = SpringContextHolder.getBean(DAO.COMMON);		String sql = "select * from " + config.getPrefix() + "guestbook order by time desc";		request.setAttribute("page",  dao.findByPage(currentPageNo, 20, sql));		return "list.html";	}				/**	 * 提交	 */	public void submit(){ 		HttpServletRequest request = getServletRequest();		HttpServletResponse response = getServletResponse();		//		String code = request.getParameter("authcode");// 验证码//		String randauthcode = (String) request.getSession().getAttribute("randauthcode");		String ip  = request.getRemoteHost();		String title = request.getParameter("title");		String content  = request.getParameter("content");		String status = request.getParameter("status");		int cid = 0;		String cids = request.getParameter("cid");		if (cids != null && cids != "") {		    cid = Integer.parseInt(cids);		}		boolean flag = true;		String msg = "";		String data = "";		def regex = /[\u4e00-\u9fa5]/;		if(title != null && content != null)		{			if(title.trim().equals(""))			{				msg = "留言标题不能为空!";			}			else if((title =~ regex).getCount() == 0)			{				msg = "留言标题需要包含中文汉字！";			}			else if(content.trim().equals(""))			{				msg = "留言内容不能为空!";			}			else if((content =~ regex).getCount() == 0)			{				msg = "留言内容需要包含中文汉字！";			}			if(!msg.equals(""))			{				flag = false;				data = "{\"status\":\""+flag+"\",\"message\":\""+msg+"\"}";			}		}		else		{			flag = false;			msg = "留言标题不能为空!";			data = "{\"status\":\""+flag+"\",\"message\":\""+msg+"\"}";		}		if(flag)		{			String sql = "insert into  " + config.getPrefix() + "guestbook(ip,title,content,status,cid,time) values(?,?,?,?,?,sysdate())";			def strs = [ip,title,content,status,cid] as Object[];			if(!commonDao.update(sql, strs)){				msg = "亲，您留言数据无效，已经进行数据回滚";				flag = false;			}			else			{				msg = "留言已提交成功，请等待后台审核！";			}			data = "{\"status\":\""+flag+"\",\"message\":\""+msg+"\"}";		}		try {			request.getSession().removeAttribute(AppStatic.WEB_APP_AUTH_CODE);//移除验证码			Writer out = response.getWriter();			out.write(data);			out.flush();			out.close();		} catch (IOException e) {			e.printStackTrace();		}  	}	/**	 * 删除	 */	public void delete()	{		HttpServletRequest request = getServletRequest();		HttpServletResponse response = getServletResponse();		String id = request.getParameter("rid");		String msg = "删除留言成功！";//		String sql= "delete from  " + config.getPrefix() + "guestbook where id in (?)";//		def strs = [id] as Object[];		if(!commonDao.deleteByIds(GuestBook.class,id))		{			msg = "删除留言失败，请稍后重试或联系管理员！";		}		try		{			Writer out = response.getWriter();			out.write("{\"status\":\"true\",\"message\":\""+msg+"\"}");			out.flush();			out.close();		} catch (IOException e) {			e.printStackTrace();		}	}	/**	 * 更新	 */	public void update()	{		HttpServletRequest request = getServletRequest();		HttpServletResponse response = getServletResponse();		String id = request.getParameter("rid");		String reply = request.getParameter("reply");		String replyUser = request.getParameter("replyUser");		String status = request.getParameter("status");		String msg = "回复留言成功！";		String sql = "update  " + config.getPrefix() + "guestbook set reply = ? , replyUser = ?, status = ?,replyTime = sysdate() where id = ?";		def strs = [reply,replyUser,status,id] as Object[];		if(!commonDao.update(sql,strs))		{			msg = "回复留言失败，请稍后重试或联系管理员！";		}		try		{			Writer out = response.getWriter();			out.write("{\"status\":\"true\",\"message\":\""+msg+"\"}");			out.flush();			out.close();		} catch (IOException e) {			e.printStackTrace();		}	}	/**	 * 回复	 */	public Object reply()	{		HttpServletRequest request = getServletRequest();		String id = request.getParameter("rid");		ISupportDao dao = SpringContextHolder.getBean(DAO.COMMON);		String sql = "select * from " + config.getPrefix() + "guestbook where id = ?";		request.setAttribute("guestbook",  dao.queryForMap(sql,id));		return "reply.html";	}	/**	 * 审核列表	 */	public Object auditList(){		HttpServletRequest request = getServletRequest();		int currentPageNo = 1;		try{			currentPageNo = Integer.parseInt(request.getParameter("currentPageNo"));		}catch(Exception e){ }		ISupportDao dao = SpringContextHolder.getBean(DAO.COMMON);		String sql = "select * from " + config.getPrefix() + "guestbook where status=2 order by time desc";		request.setAttribute("page",  dao.findByPage(currentPageNo, 5, sql));		return "audit/list.html";	}	/**	 * 审核留言	 */	public void auditUpdate()	{		HttpServletRequest request = getServletRequest();		HttpServletResponse response = getServletResponse();		String id = request.getParameter("rid");		String reject = request.getParameter("reject");		String auditUser = request.getParameter("auditUser");		String status = request.getParameter("status");		String msg = "留言数据更新成功！";		String sql = "update " + config.getPrefix() + "guestbook set reject = ?, status = ?, auditUser = ?, auditTime = sysdate() where id = ?";		def strs = [reject,status,auditUser,id] as Object[];		if(!commonDao.update(sql,strs))		{			msg = "留言数据更新失败，请稍后重试或联系管理员！";		}		try		{			Writer out = response.getWriter();			out.write("{\"status\":\"true\",\"message\":\""+msg+"\"}");			out.flush();			out.close();		} catch (IOException e) {			e.printStackTrace();		}	}	/**	 * 审核	 */	public Object audit()	{		HttpServletRequest request = getServletRequest();		String id = request.getParameter("rid");		ISupportDao dao = SpringContextHolder.getBean(DAO.COMMON);		String sql = "select * from " + config.getPrefix() + "guestbook where id = ?";		request.setAttribute("guestbook",  dao.queryForMap(sql,id));		return "audit/edit.html";	}}